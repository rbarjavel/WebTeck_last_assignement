/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { NoteWhereUniqueInput } from "./NoteWhereUniqueInput";
import { NoteListRelationFilter } from "./NoteListRelationFilter";
import { UserListRelationFilter } from "../../user/base/UserListRelationFilter";
import { EnumNoteSeverity } from "./EnumNoteSeverity";
@InputType()
class NoteWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dueDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => NoteWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => NoteWhereUniqueInput)
  @IsOptional()
  @Field(() => NoteWhereUniqueInput, {
    nullable: true,
  })
  note?: NoteWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => NoteListRelationFilter,
  })
  @ValidateNested()
  @Type(() => NoteListRelationFilter)
  @IsOptional()
  @Field(() => NoteListRelationFilter, {
    nullable: true,
  })
  notes?: NoteListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserListRelationFilter)
  @IsOptional()
  @Field(() => UserListRelationFilter, {
    nullable: true,
  })
  owner?: UserListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumNoteSeverity,
  })
  @IsEnum(EnumNoteSeverity)
  @IsOptional()
  @Field(() => EnumNoteSeverity, {
    nullable: true,
  })
  severity?: "Low" | "Moderate" | "High";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  title?: StringFilter;
}
export { NoteWhereInput };
