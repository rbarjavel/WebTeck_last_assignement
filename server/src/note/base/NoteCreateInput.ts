/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  IsOptional,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { NoteWhereUniqueInput } from "./NoteWhereUniqueInput";
import { NoteCreateNestedManyWithoutNotesInput } from "./NoteCreateNestedManyWithoutNotesInput";
import { UserCreateNestedManyWithoutNotesInput } from "./UserCreateNestedManyWithoutNotesInput";
import { EnumNoteSeverity } from "./EnumNoteSeverity";
import { EnumNoteStatus } from "./EnumNoteStatus";
@InputType()
class NoteCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  desc!: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dueDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => NoteWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => NoteWhereUniqueInput)
  @IsOptional()
  @Field(() => NoteWhereUniqueInput, {
    nullable: true,
  })
  note?: NoteWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => NoteCreateNestedManyWithoutNotesInput,
  })
  @ValidateNested()
  @Type(() => NoteCreateNestedManyWithoutNotesInput)
  @IsOptional()
  @Field(() => NoteCreateNestedManyWithoutNotesInput, {
    nullable: true,
  })
  notes?: NoteCreateNestedManyWithoutNotesInput;

  @ApiProperty({
    required: true,
    type: () => UserCreateNestedManyWithoutNotesInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutNotesInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutNotesInput, {
    nullable: true,
  })
  owner?: UserCreateNestedManyWithoutNotesInput;

  @ApiProperty({
    required: false,
    enum: EnumNoteSeverity,
  })
  @IsEnum(EnumNoteSeverity)
  @IsOptional()
  @Field(() => EnumNoteSeverity, {
    nullable: true,
  })
  severity?: "Low" | "Moderate" | "High" | null;

  @ApiProperty({
    required: false,
    enum: EnumNoteStatus,
  })
  @IsEnum(EnumNoteStatus)
  @IsOptional()
  @Field(() => EnumNoteStatus, {
    nullable: true,
  })
  status?: "ToDo" | "Done" | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  title!: string;
}
export { NoteCreateInput };
